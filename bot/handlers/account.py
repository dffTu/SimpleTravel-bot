import asyncio
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.filters import Command, CommandStart

from bot.db.template_database import Database
from bot.db.constants import UserInfo, BookingInfo, Post
from bot.handlers.start_entry import back_to_start

account_router = Router()

view_subscriptions_text = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"
view_user_info_text = "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
go_back_text = "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"
account_message = f"""
üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å —Å–≤–æ–∏–º–∏ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –∏ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.

üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:

1. {view_subscriptions_text}: –ü—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.
2. {view_user_info_text}: –ü—Ä–æ—Å–º–æ—Ç—Ä –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ.
"""

account_buttons = [
    [InlineKeyboardButton(text=view_subscriptions_text, callback_data="view_subscriptions")],
    [InlineKeyboardButton(text=view_user_info_text, callback_data="view_user_info")],
    [InlineKeyboardButton(text=go_back_text, callback_data="go_back")],
]
account_markup = InlineKeyboardMarkup(inline_keyboard=account_buttons)

class AccountState(StatesGroup):
    MAIN = State()
    VIEW_SUBSCRIPTIONS = State()
    VIEW_USER_INFO = State()

async def start_account_session(message: Message, state: FSMContext):
    await state.set_state(AccountState.MAIN)
    await message.answer(account_message, reply_markup=account_markup)


@account_router.message(Command("account"))
async def cmd_account(message: Message, state: FSMContext):
    await state.set_state(AccountState.MAIN)
    await message.answer(account_message, reply_markup=account_markup)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏"
@account_router.callback_query(F.data == "view_subscriptions")
async def view_subscriptions(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(AccountState.VIEW_SUBSCRIPTIONS)
    db = Database()
    user_id = callback.from_user.id
    bookings = db.get_bookings_by_client(user_id)

    if not bookings:
        message = await callback.message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è.")
    else:
        subscriptions = "\n".join([f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ ID: {booking.post_id}" for booking in bookings])
        message = await callback.message.answer(f"–í–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏:\n{subscriptions}")

    await message.edit_reply_markup(reply_markup=account_markup)
    await callback.answer()
    await callback.message.delete_reply_markup()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
@account_router.callback_query(F.data == "view_user_info")
async def view_user_info(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(AccountState.VIEW_USER_INFO)
    db = Database()
    user_id = callback.from_user.id
    user_info = db.get_user(user_id)

    if not user_info:
        message = await callback.message.answer("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        user_details = f"""
        üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:
        –ò–º—è: {user_info.name}
        –¢–µ–ª–µ—Ñ–æ–Ω: {user_info.phone_number}
        Email: {user_info.email}
        """
        message = await callback.message.answer(user_details)

    await message.edit_reply_markup(reply_markup=account_markup)
    await callback.answer()
    await callback.message.delete_reply_markup()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"
@account_router.callback_query(F.data == "go_back")
async def go_back(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.delete_reply_markup()
    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–∑–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞
    # –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è cmd_start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞:
    await back_to_start(callback.message, state)
    await callback.answer()
