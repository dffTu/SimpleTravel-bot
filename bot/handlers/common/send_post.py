
import logging
from typing import Optional, Union
from aiogram.methods import TelegramMethod
from aiogram.types import InputMediaPhoto, Message, URLInputFile, InlineKeyboardMarkup
from aiogram.exceptions import TelegramEntityTooLarge, TelegramNetworkError
from bot.db.constants import PostInfo


async def send_post(message: Message, post: PostInfo, keyboard: InlineKeyboardMarkup):
    text = (
        f"üå¥ –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: {post.name}\n"
        f"üìÜ –î–∞—Ç–∞: {post.date}\n"
        f"üìç –ú–µ—Å—Ç–æ: {post.region}\n"
        f"‚úâÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç: {post.contacts}\n"
    )

    should_send_text = True
    if post.photos:
        should_send_text = False
        media = [
            InputMediaPhoto(media=URLInputFile(image_url))
            for image_url in post.photos
        ]

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫ –ø–µ—Ä–≤–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
        media[0].caption = text
        media[0].parse_mode = "HTML"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞ —Å –∫–Ω–æ–ø–∫–æ–π
        try:
            return await message.answer_media_group(media, reply_markup=keyboard)
        except (TelegramNetworkError, TelegramEntityTooLarge) as e:
            logging.error(f"Error during uploading photos: {e.message}")
            should_send_text = True

    if should_send_text:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–µ—Ç –∏–ª–∏ –ø—Ä–∏ –∏—Ö –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–æ–π
        return await message.answer(text, reply_markup=keyboard)
